#import "../../fragments/event.graphql"
#import "../../fragments/nftSubsquid.graphql"

query profileStatsById($id: String!, $interactionIn: [Interaction!]) {
  listed: nftEntitiesConnection(
    where: {
      currentOwner_eq: $id
      price_gt: "0"
      events_some: {
        caller_eq: $id
        interaction_eq: LIST
        nft: { currentOwner_eq: $id, burned_eq: false }
      }
    }
    orderBy: name_ASC
  ) {
    totalCount
  }

  obtained: nftEntitiesConnection(
    where: { 
      currentOwner_eq: $id,
      burned_eq: false,
      metadata_not_eq: ""
     }
    orderBy: name_ASC
  ) {
    totalCount
  }

  sold: nftEntitiesConnection(
    where: {
      currentOwner_not_eq: $id
      issuer_eq: $id
      name_not_eq: "%Kanaria%"
      burned_not_eq: true
      events_some: { interaction_eq: BUY }
    }
    orderBy: name_ASC
  ) {
    totalCount
    edges {
      node {
        events(
          where: {
            interaction_eq: BUY
            currentOwner_eq: $id
            caller_not_eq: $id
          }
        ) {
          meta
        }
      }
    }
  }

  invested: events(
    where: { caller_eq: $id, interaction_eq: BUY, nft: { burned_eq: false } }
  ) {
    ...event
    nft {
      ...nftSubsquid
    }
  }

  created: nftEntitiesConnection(
    where: {
      issuer_eq: $id,
      burned_eq: false
      metadata_not_eq: ""
    }
    orderBy: blockNumber_DESC
  ) {
    totalCount
  }

  events: eventsConnection(
    where: {
      AND: [ 
        {
          caller_eq: $id,
          OR: {
            currentOwner_eq: $id, 
          }
        },
      ],
      interaction_in: $interactionIn
    }
    orderBy: blockNumber_DESC
  ) {
    totalCount
  }

  collections: collectionEntitiesConnection(
    where: {
      nfts_some: { burned_eq: false }
      issuer_eq: $id
      metadata_isNull: false
    }
    orderBy: blockNumber_DESC
  ) {
    totalCount
  }

}
